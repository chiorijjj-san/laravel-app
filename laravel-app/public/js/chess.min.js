/**
 * Minified by jsDelivr using Terser v5.39.0.
 * Original file: /npm/chess.js@1.3.1/dist/cjs/chess.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";
/**
 * @license
 * Copyright (c) 2025, Jeff Hlywa (jhlywa@gmail.com)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */Object.defineProperty(exports,"__esModule",{value:!0}),exports.Chess=exports.validateFen=exports.SEVEN_TAG_ROSTER=exports.SQUARES=exports.Move=exports.DEFAULT_POSITION=exports.KING=exports.QUEEN=exports.ROOK=exports.BISHOP=exports.KNIGHT=exports.PAWN=exports.BLACK=exports.WHITE=exports.xoroshiro128=void 0;const pgn_1=require("./pgn"),MASK64=0xffffffffffffffffn;function rotl(t,e){return 0xffffffffffffffffn&(t<<e|t>>64n-e)}function wrappingMul(t,e){return t*e&MASK64}function xoroshiro128(t){return function(){let e=BigInt(t&MASK64),s=BigInt(t>>64n&MASK64);const i=wrappingMul(rotl(wrappingMul(e,5n),7n),9n);return s^=e,e=(rotl(e,24n)^s^s<<16n)&MASK64,s=rotl(s,37n),t=s<<64n|e,i}}exports.xoroshiro128=xoroshiro128;const rand=xoroshiro128(0xa187eb39cdcaed8f31c4b365b102e01en),PIECE_KEYS=Array.from({length:2},(()=>Array.from({length:6},(()=>Array.from({length:128},(()=>rand())))))),EP_KEYS=Array.from({length:8},(()=>rand())),CASTLING_KEYS=Array.from({length:16},(()=>rand())),SIDE_KEY=rand();exports.WHITE="w",exports.BLACK="b",exports.PAWN="p",exports.KNIGHT="n",exports.BISHOP="b",exports.ROOK="r",exports.QUEEN="q",exports.KING="k",exports.DEFAULT_POSITION="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";class Move{color;from;to;piece;captured;promotion;flags;san;lan;before;after;constructor(t,e){const{color:s,piece:i,from:o,to:r,flags:n,captured:h,promotion:a}=e,l=algebraic(o),_=algebraic(r);this.color=s,this.piece=i,this.from=l,this.to=_,this.san=t._moveToSan(e,t._moves({legal:!0})),this.lan=l+_,this.before=t.fen(),t._makeMove(e),this.after=t.fen(),t._undoMove(),this.flags="";for(const t in BITS)BITS[t]&n&&(this.flags+=FLAGS[t]);h&&(this.captured=h),a&&(this.promotion=a,this.lan+=a)}isCapture(){return this.flags.indexOf(FLAGS.CAPTURE)>-1}isPromotion(){return this.flags.indexOf(FLAGS.PROMOTION)>-1}isEnPassant(){return this.flags.indexOf(FLAGS.EP_CAPTURE)>-1}isKingsideCastle(){return this.flags.indexOf(FLAGS.KSIDE_CASTLE)>-1}isQueensideCastle(){return this.flags.indexOf(FLAGS.QSIDE_CASTLE)>-1}isBigPawn(){return this.flags.indexOf(FLAGS.BIG_PAWN)>-1}}exports.Move=Move;const EMPTY=-1,FLAGS={NORMAL:"n",CAPTURE:"c",BIG_PAWN:"b",EP_CAPTURE:"e",PROMOTION:"p",KSIDE_CASTLE:"k",QSIDE_CASTLE:"q"};exports.SQUARES=["a8","b8","c8","d8","e8","f8","g8","h8","a7","b7","c7","d7","e7","f7","g7","h7","a6","b6","c6","d6","e6","f6","g6","h6","a5","b5","c5","d5","e5","f5","g5","h5","a4","b4","c4","d4","e4","f4","g4","h4","a3","b3","c3","d3","e3","f3","g3","h3","a2","b2","c2","d2","e2","f2","g2","h2","a1","b1","c1","d1","e1","f1","g1","h1"];const BITS={NORMAL:1,CAPTURE:2,BIG_PAWN:4,EP_CAPTURE:8,PROMOTION:16,KSIDE_CASTLE:32,QSIDE_CASTLE:64};exports.SEVEN_TAG_ROSTER={Event:"?",Site:"?",Date:"????.??.??",Round:"?",White:"?",Black:"?",Result:"*"};const SUPLEMENTAL_TAGS={WhiteTitle:null,BlackTitle:null,WhiteElo:null,BlackElo:null,WhiteUSCF:null,BlackUSCF:null,WhiteNA:null,BlackNA:null,WhiteType:null,BlackType:null,EventDate:null,EventSponsor:null,Section:null,Stage:null,Board:null,Opening:null,Variation:null,SubVariation:null,ECO:null,NIC:null,Time:null,UTCTime:null,UTCDate:null,TimeControl:null,SetUp:null,FEN:null,Termination:null,Annotator:null,Mode:null,PlyCount:null},HEADER_TEMPLATE={...exports.SEVEN_TAG_ROSTER,...SUPLEMENTAL_TAGS},Ox88={a8:0,b8:1,c8:2,d8:3,e8:4,f8:5,g8:6,h8:7,a7:16,b7:17,c7:18,d7:19,e7:20,f7:21,g7:22,h7:23,a6:32,b6:33,c6:34,d6:35,e6:36,f6:37,g6:38,h6:39,a5:48,b5:49,c5:50,d5:51,e5:52,f5:53,g5:54,h5:55,a4:64,b4:65,c4:66,d4:67,e4:68,f4:69,g4:70,h4:71,a3:80,b3:81,c3:82,d3:83,e3:84,f3:85,g3:86,h3:87,a2:96,b2:97,c2:98,d2:99,e2:100,f2:101,g2:102,h2:103,a1:112,b1:113,c1:114,d1:115,e1:116,f1:117,g1:118,h1:119},PAWN_OFFSETS={b:[16,32,17,15],w:[-16,-32,-17,-15]},PIECE_OFFSETS={n:[-18,-33,-31,-14,18,33,31,14],b:[-17,-15,17,15],r:[-16,1,16,-1],q:[-17,-16,-15,1,17,16,15,-1],k:[-17,-16,-15,1,17,16,15,-1]},ATTACKS=[20,0,0,0,0,0,0,24,0,0,0,0,0,0,20,0,0,20,0,0,0,0,0,24,0,0,0,0,0,20,0,0,0,0,20,0,0,0,0,24,0,0,0,0,20,0,0,0,0,0,0,20,0,0,0,24,0,0,0,20,0,0,0,0,0,0,0,0,20,0,0,24,0,0,20,0,0,0,0,0,0,0,0,0,0,20,2,24,2,20,0,0,0,0,0,0,0,0,0,0,0,2,53,56,53,2,0,0,0,0,0,0,24,24,24,24,24,24,56,0,56,24,24,24,24,24,24,0,0,0,0,0,0,2,53,56,53,2,0,0,0,0,0,0,0,0,0,0,0,20,2,24,2,20,0,0,0,0,0,0,0,0,0,0,20,0,0,24,0,0,20,0,0,0,0,0,0,0,0,20,0,0,0,24,0,0,0,20,0,0,0,0,0,0,20,0,0,0,0,24,0,0,0,0,20,0,0,0,0,20,0,0,0,0,0,24,0,0,0,0,0,20,0,0,20,0,0,0,0,0,0,24,0,0,0,0,0,0,20],RAYS=[17,0,0,0,0,0,0,16,0,0,0,0,0,0,15,0,0,17,0,0,0,0,0,16,0,0,0,0,0,15,0,0,0,0,17,0,0,0,0,16,0,0,0,0,15,0,0,0,0,0,0,17,0,0,0,16,0,0,0,15,0,0,0,0,0,0,0,0,17,0,0,16,0,0,15,0,0,0,0,0,0,0,0,0,0,17,0,16,0,15,0,0,0,0,0,0,0,0,0,0,0,0,17,16,15,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,-15,-16,-17,0,0,0,0,0,0,0,0,0,0,0,0,-15,0,-16,0,-17,0,0,0,0,0,0,0,0,0,0,-15,0,0,-16,0,0,-17,0,0,0,0,0,0,0,0,-15,0,0,0,-16,0,0,0,-17,0,0,0,0,0,0,-15,0,0,0,0,-16,0,0,0,0,-17,0,0,0,0,-15,0,0,0,0,0,-16,0,0,0,0,0,-17,0,0,-15,0,0,0,0,0,0,-16,0,0,0,0,0,0,-17],PIECE_MASKS={p:1,n:2,b:4,r:8,q:16,k:32},SYMBOLS="pnbrqkPNBRQK",PROMOTIONS=[exports.KNIGHT,exports.BISHOP,exports.ROOK,exports.QUEEN],RANK_1=7,RANK_2=6,RANK_7=1,RANK_8=0,SIDES={[exports.KING]:BITS.KSIDE_CASTLE,[exports.QUEEN]:BITS.QSIDE_CASTLE},ROOKS={w:[{square:Ox88.a1,flag:BITS.QSIDE_CASTLE},{square:Ox88.h1,flag:BITS.KSIDE_CASTLE}],b:[{square:Ox88.a8,flag:BITS.QSIDE_CASTLE},{square:Ox88.h8,flag:BITS.KSIDE_CASTLE}]},SECOND_RANK={b:1,w:6};function rank(t){return t>>4}function file(t){return 15&t}function isDigit(t){return-1!=="0123456789".indexOf(t)}function algebraic(t){const e=file(t),s=rank(t);return"abcdefgh".substring(e,e+1)+"87654321".substring(s,s+1)}function swapColor(t){return t===exports.WHITE?exports.BLACK:exports.WHITE}function validateFen(t){const e=t.split(/\s+/);if(6!==e.length)return{ok:!1,error:"Invalid FEN: must contain six space-delimited fields"};const s=parseInt(e[5],10);if(isNaN(s)||s<=0)return{ok:!1,error:"Invalid FEN: move number must be a positive integer"};const i=parseInt(e[4],10);if(isNaN(i)||i<0)return{ok:!1,error:"Invalid FEN: half move counter number must be a non-negative integer"};if(!/^(-|[abcdefgh][36])$/.test(e[3]))return{ok:!1,error:"Invalid FEN: en-passant square is invalid"};if(/[^kKqQ-]/.test(e[2]))return{ok:!1,error:"Invalid FEN: castling availability is invalid"};if(!/^(w|b)$/.test(e[1]))return{ok:!1,error:"Invalid FEN: side-to-move is invalid"};const o=e[0].split("/");if(8!==o.length)return{ok:!1,error:"Invalid FEN: piece data does not contain 8 '/'-delimited rows"};for(let t=0;t<o.length;t++){let e=0,s=!1;for(let i=0;i<o[t].length;i++)if(isDigit(o[t][i])){if(s)return{ok:!1,error:"Invalid FEN: piece data is invalid (consecutive number)"};e+=parseInt(o[t][i],10),s=!0}else{if(!/^[prnbqkPRNBQK]$/.test(o[t][i]))return{ok:!1,error:"Invalid FEN: piece data is invalid (invalid piece)"};e+=1,s=!1}if(8!==e)return{ok:!1,error:"Invalid FEN: piece data is invalid (too many squares in rank)"}}if("3"==e[3][1]&&"w"==e[1]||"6"==e[3][1]&&"b"==e[1])return{ok:!1,error:"Invalid FEN: illegal en-passant square"};const r=[{color:"white",regex:/K/g},{color:"black",regex:/k/g}];for(const{color:t,regex:s}of r){if(!s.test(e[0]))return{ok:!1,error:`Invalid FEN: missing ${t} king`};if((e[0].match(s)||[]).length>1)return{ok:!1,error:`Invalid FEN: too many ${t} kings`}}return Array.from(o[0]+o[7]).some((t=>"P"===t.toUpperCase()))?{ok:!1,error:"Invalid FEN: some pawns are on the edge rows"}:{ok:!0}}function getDisambiguator(t,e){const s=t.from,i=t.to,o=t.piece;let r=0,n=0,h=0;for(let t=0,a=e.length;t<a;t++){const a=e[t].from,l=e[t].to;o===e[t].piece&&s!==a&&i===l&&(r++,rank(s)===rank(a)&&n++,file(s)===file(a)&&h++)}return r>0?n>0&&h>0?algebraic(s):h>0?algebraic(s).charAt(1):algebraic(s).charAt(0):""}function addMove(t,e,s,i,o,r=void 0,n=BITS.NORMAL){const h=rank(i);if(o!==exports.PAWN||7!==h&&0!==h)t.push({color:e,from:s,to:i,piece:o,captured:r,flags:n});else for(let h=0;h<PROMOTIONS.length;h++){const a=PROMOTIONS[h];t.push({color:e,from:s,to:i,piece:o,captured:r,promotion:a,flags:n|BITS.PROMOTION})}}function inferPieceType(t){let e=t.charAt(0);if(e>="a"&&e<="h"){if(t.match(/[a-h]\d.*[a-h]\d/))return;return exports.PAWN}return e=e.toLowerCase(),"o"===e?exports.KING:e}function strippedSan(t){return t.replace(/=/,"").replace(/[+#]?[?!]*$/,"")}exports.validateFen=validateFen;class Chess{_board=new Array(128);_turn=exports.WHITE;_header={};_kings={w:-1,b:-1};_epSquare=-1;_halfMoves=0;_moveNumber=0;_history=[];_comments={};_castling={w:0,b:0};_hash=0n;_positionCount=new Map;constructor(t=exports.DEFAULT_POSITION,{skipValidation:e=!1}={}){this.load(t,{skipValidation:e})}clear({preserveHeaders:t=!1}={}){this._board=new Array(128),this._kings={w:-1,b:-1},this._turn=exports.WHITE,this._castling={w:0,b:0},this._epSquare=-1,this._halfMoves=0,this._moveNumber=1,this._history=[],this._comments={},this._header=t?this._header:{...HEADER_TEMPLATE},this._hash=this._computeHash(),this._positionCount=new Map,this._header.SetUp=null,this._header.FEN=null}load(t,{skipValidation:e=!1,preserveHeaders:s=!1}={}){let i=t.split(/\s+/);if(i.length>=2&&i.length<6){const e=["-","-","0","1"];t=i.concat(e.slice(-(6-i.length))).join(" ")}if(i=t.split(/\s+/),!e){const{ok:e,error:s}=validateFen(t);if(!e)throw new Error(s)}const o=i[0];let r=0;this.clear({preserveHeaders:s});for(let t=0;t<o.length;t++){const e=o.charAt(t);if("/"===e)r+=8;else if(isDigit(e))r+=parseInt(e,10);else{const t=e<"a"?exports.WHITE:exports.BLACK;this._put({type:e.toLowerCase(),color:t},algebraic(r)),r++}}this._turn=i[1],i[2].indexOf("K")>-1&&(this._castling.w|=BITS.KSIDE_CASTLE),i[2].indexOf("Q")>-1&&(this._castling.w|=BITS.QSIDE_CASTLE),i[2].indexOf("k")>-1&&(this._castling.b|=BITS.KSIDE_CASTLE),i[2].indexOf("q")>-1&&(this._castling.b|=BITS.QSIDE_CASTLE),this._epSquare="-"===i[3]?-1:Ox88[i[3]],this._halfMoves=parseInt(i[4],10),this._moveNumber=parseInt(i[5],10),this._hash=this._computeHash(),this._updateSetup(t),this._incPositionCount()}fen({forceEnpassantSquare:t=!1}={}){let e=0,s="";for(let t=Ox88.a8;t<=Ox88.h1;t++){if(this._board[t]){e>0&&(s+=e,e=0);const{color:i,type:o}=this._board[t];s+=i===exports.WHITE?o.toUpperCase():o.toLowerCase()}else e++;t+1&136&&(e>0&&(s+=e),t!==Ox88.h1&&(s+="/"),e=0,t+=8)}let i="";this._castling[exports.WHITE]&BITS.KSIDE_CASTLE&&(i+="K"),this._castling[exports.WHITE]&BITS.QSIDE_CASTLE&&(i+="Q"),this._castling[exports.BLACK]&BITS.KSIDE_CASTLE&&(i+="k"),this._castling[exports.BLACK]&BITS.QSIDE_CASTLE&&(i+="q"),i=i||"-";let o="-";if(-1!==this._epSquare)if(t)o=algebraic(this._epSquare);else{const t=this._epSquare+(this._turn===exports.WHITE?16:-16),e=[t+1,t-1];for(const t of e){if(136&t)continue;const e=this._turn;if(this._board[t]?.color===e&&this._board[t]?.type===exports.PAWN){this._makeMove({color:e,from:t,to:this._epSquare,piece:exports.PAWN,captured:exports.PAWN,flags:BITS.EP_CAPTURE});const s=!this._isKingAttacked(e);if(this._undoMove(),s){o=algebraic(this._epSquare);break}}}}return[s,this._turn,i,o,this._halfMoves,this._moveNumber].join(" ")}_pieceKey(t){if(!this._board[t])return 0n;const{color:e,type:s}=this._board[t],i={p:0,n:1,b:2,r:3,q:4,k:5}[s];return PIECE_KEYS[{w:0,b:1}[e]][i][t]}_epKey(){return-1===this._epSquare?0n:EP_KEYS[7&this._epSquare]}_castlingKey(){const t=this._castling.w>>5|this._castling.b>>3;return CASTLING_KEYS[t]}_computeHash(){let t=0n;for(let e=Ox88.a8;e<=Ox88.h1;e++)136&e?e+=7:this._board[e]&&(t^=this._pieceKey(e));return t^=this._epKey(),t^=this._castlingKey(),"b"===this._turn&&(t^=SIDE_KEY),t}_updateSetup(t){this._history.length>0||(t!==exports.DEFAULT_POSITION?(this._header.SetUp="1",this._header.FEN=t):(this._header.SetUp=null,this._header.FEN=null))}reset(){this.load(exports.DEFAULT_POSITION)}get(t){return this._board[Ox88[t]]}findPiece(t){const e=[];for(let s=Ox88.a8;s<=Ox88.h1;s++)136&s?s+=7:this._board[s]&&this._board[s]?.color===t.color&&this._board[s].color===t.color&&this._board[s].type===t.type&&e.push(algebraic(s));return e}put({type:t,color:e},s){return!!this._put({type:t,color:e},s)&&(this._updateCastlingRights(),this._updateEnPassantSquare(),this._updateSetup(this.fen()),!0)}_set(t,e){this._hash^=this._pieceKey(t),this._board[t]=e,this._hash^=this._pieceKey(t)}_put({type:t,color:e},s){if(-1===SYMBOLS.indexOf(t.toLowerCase()))return!1;if(!(s in Ox88))return!1;const i=Ox88[s];if(t==exports.KING&&-1!=this._kings[e]&&this._kings[e]!=i)return!1;const o=this._board[i];return o&&o.type===exports.KING&&(this._kings[o.color]=-1),this._set(i,{type:t,color:e}),t===exports.KING&&(this._kings[e]=i),!0}_clear(t){this._hash^=this._pieceKey(t),delete this._board[t]}remove(t){const e=this.get(t);return this._clear(Ox88[t]),e&&e.type===exports.KING&&(this._kings[e.color]=-1),this._updateCastlingRights(),this._updateEnPassantSquare(),this._updateSetup(this.fen()),e}_updateCastlingRights(){this._hash^=this._castlingKey();const t=this._board[Ox88.e1]?.type===exports.KING&&this._board[Ox88.e1]?.color===exports.WHITE,e=this._board[Ox88.e8]?.type===exports.KING&&this._board[Ox88.e8]?.color===exports.BLACK;t&&this._board[Ox88.a1]?.type===exports.ROOK&&this._board[Ox88.a1]?.color===exports.WHITE||(this._castling.w&=~BITS.QSIDE_CASTLE),t&&this._board[Ox88.h1]?.type===exports.ROOK&&this._board[Ox88.h1]?.color===exports.WHITE||(this._castling.w&=~BITS.KSIDE_CASTLE),e&&this._board[Ox88.a8]?.type===exports.ROOK&&this._board[Ox88.a8]?.color===exports.BLACK||(this._castling.b&=~BITS.QSIDE_CASTLE),e&&this._board[Ox88.h8]?.type===exports.ROOK&&this._board[Ox88.h8]?.color===exports.BLACK||(this._castling.b&=~BITS.KSIDE_CASTLE),this._hash^=this._castlingKey()}_updateEnPassantSquare(){if(-1===this._epSquare)return;const t=this._epSquare+(this._turn===exports.WHITE?-16:16),e=this._epSquare+(this._turn===exports.WHITE?16:-16),s=[e+1,e-1];if(null!==this._board[t]||null!==this._board[this._epSquare]||this._board[e]?.color!==swapColor(this._turn)||this._board[e]?.type!==exports.PAWN)return this._hash^=this._epKey(),void(this._epSquare=-1);s.some((t=>!(136&t)&&this._board[t]?.color===this._turn&&this._board[t]?.type===exports.PAWN))||(this._hash^=this._epKey(),this._epSquare=-1)}_attacked(t,e,s){const i=[];for(let o=Ox88.a8;o<=Ox88.h1;o++){if(136&o){o+=7;continue}if(void 0===this._board[o]||this._board[o].color!==t)continue;const r=this._board[o],n=o-e;if(0===n)continue;const h=n+119;if(ATTACKS[h]&PIECE_MASKS[r.type]){if(r.type===exports.PAWN){if(n>0&&r.color===exports.WHITE||n<=0&&r.color===exports.BLACK){if(!s)return!0;i.push(algebraic(o))}continue}if("n"===r.type||"k"===r.type){if(s){i.push(algebraic(o));continue}return!0}const t=RAYS[h];let a=o+t,l=!1;for(;a!==e;){if(null!=this._board[a]){l=!0;break}a+=t}if(!l){if(s){i.push(algebraic(o));continue}return!0}}}return!!s&&i}attackers(t,e){return e?this._attacked(e,Ox88[t],!0):this._attacked(this._turn,Ox88[t],!0)}_isKingAttacked(t){const e=this._kings[t];return-1!==e&&this._attacked(swapColor(t),e)}hash(){return this._hash.toString(16)}isAttacked(t,e){return this._attacked(e,Ox88[t])}isCheck(){return this._isKingAttacked(this._turn)}inCheck(){return this.isCheck()}isCheckmate(){return this.isCheck()&&0===this._moves().length}isStalemate(){return!this.isCheck()&&0===this._moves().length}isInsufficientMaterial(){const t={b:0,n:0,r:0,q:0,k:0,p:0},e=[];let s=0,i=0;for(let o=Ox88.a8;o<=Ox88.h1;o++){if(i=(i+1)%2,136&o){o+=7;continue}const r=this._board[o];r&&(t[r.type]=r.type in t?t[r.type]+1:1,r.type===exports.BISHOP&&e.push(i),s++)}if(2===s)return!0;if(3===s&&(1===t[exports.BISHOP]||1===t[exports.KNIGHT]))return!0;if(s===t[exports.BISHOP]+2){let t=0;const s=e.length;for(let i=0;i<s;i++)t+=e[i];if(0===t||t===s)return!0}return!1}isThreefoldRepetition(){return this._getPositionCount(this._hash)>=3}isDrawByFiftyMoves(){return this._halfMoves>=100}isDraw(){return this.isDrawByFiftyMoves()||this.isStalemate()||this.isInsufficientMaterial()||this.isThreefoldRepetition()}isGameOver(){return this.isCheckmate()||this.isDraw()}moves({verbose:t=!1,square:e,piece:s}={}){const i=this._moves({square:e,piece:s});return t?i.map((t=>new Move(this,t))):i.map((t=>this._moveToSan(t,i)))}_moves({legal:t=!0,piece:e,square:s}={}){const i=s?s.toLowerCase():void 0,o=e?.toLowerCase(),r=[],n=this._turn,h=swapColor(n);let a=Ox88.a8,l=Ox88.h1,_=!1;if(i){if(!(i in Ox88))return[];a=l=Ox88[i],_=!0}for(let t=a;t<=l;t++){if(136&t){t+=7;continue}if(!this._board[t]||this._board[t].color===h)continue;const{type:e}=this._board[t];let s;if(e===exports.PAWN){if(o&&o!==e)continue;s=t+PAWN_OFFSETS[n][0],this._board[s]||(addMove(r,n,t,s,exports.PAWN),s=t+PAWN_OFFSETS[n][1],SECOND_RANK[n]!==rank(t)||this._board[s]||addMove(r,n,t,s,exports.PAWN,void 0,BITS.BIG_PAWN));for(let e=2;e<4;e++)s=t+PAWN_OFFSETS[n][e],136&s||(this._board[s]?.color===h?addMove(r,n,t,s,exports.PAWN,this._board[s].type,BITS.CAPTURE):s===this._epSquare&&addMove(r,n,t,s,exports.PAWN,exports.PAWN,BITS.EP_CAPTURE))}else{if(o&&o!==e)continue;for(let i=0,o=PIECE_OFFSETS[e].length;i<o;i++){const o=PIECE_OFFSETS[e][i];for(s=t;s+=o,!(136&s);){if(this._board[s]){if(this._board[s].color===n)break;addMove(r,n,t,s,e,this._board[s].type,BITS.CAPTURE);break}if(addMove(r,n,t,s,e),e===exports.KNIGHT||e===exports.KING)break}}}}if(!(void 0!==o&&o!==exports.KING||_&&l!==this._kings[n])){if(this._castling[n]&BITS.KSIDE_CASTLE){const t=this._kings[n],e=t+2;this._board[t+1]||this._board[e]||this._attacked(h,this._kings[n])||this._attacked(h,t+1)||this._attacked(h,e)||addMove(r,n,this._kings[n],e,exports.KING,void 0,BITS.KSIDE_CASTLE)}if(this._castling[n]&BITS.QSIDE_CASTLE){const t=this._kings[n],e=t-2;this._board[t-1]||this._board[t-2]||this._board[t-3]||this._attacked(h,this._kings[n])||this._attacked(h,t-1)||this._attacked(h,e)||addMove(r,n,this._kings[n],e,exports.KING,void 0,BITS.QSIDE_CASTLE)}}if(!t||-1===this._kings[n])return r;const p=[];for(let t=0,e=r.length;t<e;t++)this._makeMove(r[t]),this._isKingAttacked(n)||p.push(r[t]),this._undoMove();return p}move(t,{strict:e=!1}={}){let s=null;if("string"==typeof t)s=this._moveFromSan(t,e);else if("object"==typeof t){const e=this._moves();for(let i=0,o=e.length;i<o;i++)if(t.from===algebraic(e[i].from)&&t.to===algebraic(e[i].to)&&(!("promotion"in e[i])||t.promotion===e[i].promotion)){s=e[i];break}}if(!s)throw"string"==typeof t?new Error(`Invalid move: ${t}`):new Error(`Invalid move: ${JSON.stringify(t)}`);const i=new Move(this,s);return this._makeMove(s),this._incPositionCount(),i}_push(t){this._history.push({move:t,kings:{b:this._kings.b,w:this._kings.w},turn:this._turn,castling:{b:this._castling.b,w:this._castling.w},epSquare:this._epSquare,halfMoves:this._halfMoves,moveNumber:this._moveNumber})}_movePiece(t,e){this._hash^=this._pieceKey(t),this._board[e]=this._board[t],delete this._board[t],this._hash^=this._pieceKey(e)}_makeMove(t){const e=this._turn,s=swapColor(e);if(this._push(t),this._hash^=this._epKey(),this._hash^=this._castlingKey(),t.captured&&(this._hash^=this._pieceKey(t.to)),this._movePiece(t.from,t.to),t.flags&BITS.EP_CAPTURE&&(this._turn===exports.BLACK?this._clear(t.to-16):this._clear(t.to+16)),t.promotion&&(this._clear(t.to),this._set(t.to,{type:t.promotion,color:e})),this._board[t.to].type===exports.KING){if(this._kings[e]=t.to,t.flags&BITS.KSIDE_CASTLE){const e=t.to-1,s=t.to+1;this._movePiece(s,e)}else if(t.flags&BITS.QSIDE_CASTLE){const e=t.to+1,s=t.to-2;this._movePiece(s,e)}this._castling[e]=0}if(this._castling[e])for(let s=0,i=ROOKS[e].length;s<i;s++)if(t.from===ROOKS[e][s].square&&this._castling[e]&ROOKS[e][s].flag){this._castling[e]^=ROOKS[e][s].flag;break}if(this._castling[s])for(let e=0,i=ROOKS[s].length;e<i;e++)if(t.to===ROOKS[s][e].square&&this._castling[s]&ROOKS[s][e].flag){this._castling[s]^=ROOKS[s][e].flag;break}if(this._hash^=this._castlingKey(),t.flags&BITS.BIG_PAWN){let i;i=e===exports.BLACK?t.to-16:t.to+16,(t.to-1&136||this._board[t.to-1]?.type!==exports.PAWN||this._board[t.to-1]?.color!==s)&&(t.to+1&136||this._board[t.to+1]?.type!==exports.PAWN||this._board[t.to+1]?.color!==s)?this._epSquare=-1:(this._epSquare=i,this._hash^=this._epKey())}else this._epSquare=-1;t.piece===exports.PAWN||t.flags&(BITS.CAPTURE|BITS.EP_CAPTURE)?this._halfMoves=0:this._halfMoves++,e===exports.BLACK&&this._moveNumber++,this._turn=s,this._hash^=SIDE_KEY}undo(){const t=this._hash,e=this._undoMove();if(e){const s=new Move(this,e);return this._decPositionCount(t),s}return null}_undoMove(){const t=this._history.pop();if(void 0===t)return null;this._hash^=this._epKey(),this._hash^=this._castlingKey();const e=t.move;this._kings=t.kings,this._turn=t.turn,this._castling=t.castling,this._epSquare=t.epSquare,this._halfMoves=t.halfMoves,this._moveNumber=t.moveNumber,this._hash^=this._epKey(),this._hash^=this._castlingKey(),this._hash^=SIDE_KEY;const s=this._turn,i=swapColor(s);if(this._movePiece(e.to,e.from),e.piece&&(this._clear(e.from),this._set(e.from,{type:e.piece,color:s})),e.captured)if(e.flags&BITS.EP_CAPTURE){let t;t=s===exports.BLACK?e.to-16:e.to+16,this._set(t,{type:exports.PAWN,color:i})}else this._set(e.to,{type:e.captured,color:i});if(e.flags&(BITS.KSIDE_CASTLE|BITS.QSIDE_CASTLE)){let t,s;e.flags&BITS.KSIDE_CASTLE?(t=e.to+1,s=e.to-1):(t=e.to-2,s=e.to+1),this._movePiece(s,t)}return e}pgn({newline:t="\n",maxWidth:e=0}={}){const s=[];let i=!1;for(const e in this._header){this._header[e]&&s.push(`[${e} "${this._header[e]}"]`+t),i=!0}i&&this._history.length&&s.push(t);const o=t=>{const e=this._comments[this.fen()];if(void 0!==e){t=`${t}${t.length>0?" ":""}{${e}}`}return t},r=[];for(;this._history.length>0;)r.push(this._undoMove());const n=[];let h="";for(0===r.length&&n.push(o(""));r.length>0;){h=o(h);const t=r.pop();if(!t)break;if(this._history.length||"b"!==t.color)"w"===t.color&&(h.length&&n.push(h),h=this._moveNumber+".");else{const t=`${this._moveNumber}. ...`;h=h?`${h} ${t}`:t}h=h+" "+this._moveToSan(t,this._moves({legal:!0})),this._makeMove(t)}if(h.length&&n.push(o(h)),n.push(this._header.Result||"*"),0===e)return s.join("")+n.join(" ");const a=function(){return s.length>0&&" "===s[s.length-1]&&(s.pop(),!0)},l=function(i,o){for(const r of o.split(" "))if(r){if(i+r.length>e){for(;a();)i--;s.push(t),i=0}s.push(r),i+=r.length,s.push(" "),i++}return a()&&i--,i};let _=0;for(let i=0;i<n.length;i++)_+n[i].length>e&&n[i].includes("{")?_=l(_,n[i]):(_+n[i].length>e&&0!==i?(" "===s[s.length-1]&&s.pop(),s.push(t),_=0):0!==i&&(s.push(" "),_++),s.push(n[i]),_+=n[i].length);return s.join("")}header(...t){for(let e=0;e<t.length;e+=2)"string"==typeof t[e]&&"string"==typeof t[e+1]&&(this._header[t[e]]=t[e+1]);return this._header}setHeader(t,e){return this._header[t]=e??exports.SEVEN_TAG_ROSTER[t]??null,this.getHeaders()}removeHeader(t){return t in this._header&&(this._header[t]=exports.SEVEN_TAG_ROSTER[t]||null,!0)}getHeaders(){const t={};for(const[e,s]of Object.entries(this._header))null!==s&&(t[e]=s);return t}loadPgn(t,{strict:e=!1,newlineChar:s="\r?\n"}={}){"\r?\n"!==s&&(t=t.replace(new RegExp(s,"g"),"\n"));const i=(0,pgn_1.parse)(t);this.reset();const o=i.headers;let r="";for(const t in o)"fen"===t.toLowerCase()&&(r=o[t]),this.header(t,o[t]);if(e){if("1"===o.SetUp){if(!("FEN"in o))throw new Error("Invalid PGN: FEN tag must be supplied with SetUp tag");this.load(o.FEN,{preserveHeaders:!0})}}else r&&this.load(r,{preserveHeaders:!0});let n=i.root;for(;n;){if(n.move){const t=this._moveFromSan(n.move,e);if(null==t)throw new Error(`Invalid move in PGN: ${n.move}`);this._makeMove(t),this._incPositionCount()}void 0!==n.comment&&(this._comments[this.fen()]=n.comment),n=n.variations[0]}const h=i.result;h&&Object.keys(this._header).length&&this._header.Result!==h&&this.setHeader("Result",h)}_moveToSan(t,e){let s="";if(t.flags&BITS.KSIDE_CASTLE)s="O-O";else if(t.flags&BITS.QSIDE_CASTLE)s="O-O-O";else{if(t.piece!==exports.PAWN){const i=getDisambiguator(t,e);s+=t.piece.toUpperCase()+i}t.flags&(BITS.CAPTURE|BITS.EP_CAPTURE)&&(t.piece===exports.PAWN&&(s+=algebraic(t.from)[0]),s+="x"),s+=algebraic(t.to),t.promotion&&(s+="="+t.promotion.toUpperCase())}return this._makeMove(t),this.isCheck()&&(this.isCheckmate()?s+="#":s+="+"),this._undoMove(),s}_moveFromSan(t,e=!1){let s=strippedSan(t);e||("0-0"===s?s="O-O":"0-0-0"===s&&(s="O-O-O"));let i,o,r,n,h,a=inferPieceType(s),l=this._moves({legal:!0,piece:a});for(let t=0,e=l.length;t<e;t++)if(s===strippedSan(this._moveToSan(l[t],l)))return l[t];if(e)return null;let _=!1;if(o=s.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/),o?(i=o[1],r=o[2],n=o[3],h=o[4],1==r.length&&(_=!0)):(o=s.match(/([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/),o&&(i=o[1],r=o[2],n=o[3],h=o[4],1==r.length&&(_=!0))),a=inferPieceType(s),l=this._moves({legal:!0,piece:i||a}),!n)return null;for(let t=0,e=l.length;t<e;t++)if(r){if(!(i&&i.toLowerCase()!=l[t].piece||Ox88[r]!=l[t].from||Ox88[n]!=l[t].to||h&&h.toLowerCase()!=l[t].promotion))return l[t];if(_){const e=algebraic(l[t].from);if(!(i&&i.toLowerCase()!=l[t].piece||Ox88[n]!=l[t].to||r!=e[0]&&r!=e[1]||h&&h.toLowerCase()!=l[t].promotion))return l[t]}}else if(s===strippedSan(this._moveToSan(l[t],l)).replace("x",""))return l[t];return null}ascii(){let t="   +------------------------+\n";for(let e=Ox88.a8;e<=Ox88.h1;e++){if(0===file(e)&&(t+=" "+"87654321"[rank(e)]+" |"),this._board[e]){const s=this._board[e].type;t+=" "+(this._board[e].color===exports.WHITE?s.toUpperCase():s.toLowerCase())+" "}else t+=" . ";e+1&136&&(t+="|\n",e+=8)}return t+="   +------------------------+\n",t+="     a  b  c  d  e  f  g  h",t}perft(t){const e=this._moves({legal:!1});let s=0;const i=this._turn;for(let o=0,r=e.length;o<r;o++)this._makeMove(e[o]),this._isKingAttacked(i)||(t-1>0?s+=this.perft(t-1):s++),this._undoMove();return s}turn(){return this._turn}board(){const t=[];let e=[];for(let s=Ox88.a8;s<=Ox88.h1;s++)null==this._board[s]?e.push(null):e.push({square:algebraic(s),type:this._board[s].type,color:this._board[s].color}),s+1&136&&(t.push(e),e=[],s+=8);return t}squareColor(t){if(t in Ox88){const e=Ox88[t];return(rank(e)+file(e))%2==0?"light":"dark"}return null}history({verbose:t=!1}={}){const e=[],s=[];for(;this._history.length>0;)e.push(this._undoMove());for(;;){const i=e.pop();if(!i)break;t?s.push(new Move(this,i)):s.push(this._moveToSan(i,this._moves())),this._makeMove(i)}return s}_getPositionCount(t){return this._positionCount.get(t)??0}_incPositionCount(){this._positionCount.set(this._hash,(this._positionCount.get(this._hash)??0)+1)}_decPositionCount(t){const e=this._positionCount.get(t)??0;1===e?this._positionCount.delete(t):this._positionCount.set(t,e-1)}_pruneComments(){const t=[],e={},s=t=>{t in this._comments&&(e[t]=this._comments[t])};for(;this._history.length>0;)t.push(this._undoMove());for(s(this.fen());;){const e=t.pop();if(!e)break;this._makeMove(e),s(this.fen())}this._comments=e}getComment(){return this._comments[this.fen()]}setComment(t){this._comments[this.fen()]=t.replace("{","[").replace("}","]")}deleteComment(){return this.removeComment()}removeComment(){const t=this._comments[this.fen()];return delete this._comments[this.fen()],t}getComments(){return this._pruneComments(),Object.keys(this._comments).map((t=>({fen:t,comment:this._comments[t]})))}deleteComments(){return this.removeComments()}removeComments(){return this._pruneComments(),Object.keys(this._comments).map((t=>{const e=this._comments[t];return delete this._comments[t],{fen:t,comment:e}}))}setCastlingRights(t,e){for(const s of[exports.KING,exports.QUEEN])void 0!==e[s]&&(e[s]?this._castling[t]|=SIDES[s]:this._castling[t]&=~SIDES[s]);this._updateCastlingRights();const s=this.getCastlingRights(t);return!(void 0!==e[exports.KING]&&e[exports.KING]!==s[exports.KING]||void 0!==e[exports.QUEEN]&&e[exports.QUEEN]!==s[exports.QUEEN])}getCastlingRights(t){return{[exports.KING]:!!(this._castling[t]&SIDES[exports.KING]),[exports.QUEEN]:!!(this._castling[t]&SIDES[exports.QUEEN])}}moveNumber(){return this._moveNumber}}exports.Chess=Chess;
//# sourceMappingURL=/sm/f56465f5277174a61b07d68ff19e7d6c74fb586a24c39f710e11fe3429c998e1.map