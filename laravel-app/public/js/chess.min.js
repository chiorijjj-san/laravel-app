const board = document.getElementById('chessboard');
let selectedSquare = null;

// basic 2D array layout (P = pawn, R = rook, etc.)
let gameState = [
  ['r','n','b','q','k','b','n','r'],
  ['p','p','p','p','p','p','p','p'],
  ['','','','','','','',''],
  ['','','','','','','',''],
  ['','','','','','','',''],
  ['','','','','','','',''],
  ['P','P','P','P','P','P','P','P'],
  ['R','N','B','Q','K','B','N','R'],
];

function renderBoard() {
  board.innerHTML = '';
  for (let row = 0; row < 8; row++) {
    for (let col = 0; col < 8; col++) {
      const square = document.createElement('div');
      square.classList.add('square');
      square.classList.add((row + col) % 2 === 0 ? 'white' : 'black');
      square.dataset.row = row;
      square.dataset.col = col;
      square.textContent = gameState[row][col];
      square.onclick = handleSquareClick;
      board.appendChild(square);
    }
  }
}

function handleSquareClick(e) {
  const row = +e.target.dataset.row;
  const col = +e.target.dataset.col;

  if (selectedSquare) {
    // Move piece
    const fromRow = +selectedSquare.dataset.row;
    const fromCol = +selectedSquare.dataset.col;

    // Simple move (no rules yet)
    gameState[row][col] = gameState[fromRow][fromCol];
    gameState[fromRow][fromCol] = '';
    selectedSquare.classList.remove('selected');
    selectedSquare = null;
    renderBoard();
    return;
  }

  if (gameState[row][col] !== '') {
    selectedSquare = e.target;
    selectedSquare.classList.add('selected');
  }
}

renderBoard();